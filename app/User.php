<?php
bolt_decrypt( __FILE__ , 'F4Scho'); return 0;
##!!!##