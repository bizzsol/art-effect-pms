<?php
bolt_decrypt( __FILE__ , 'lCaTOM'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEltcG9ydHM7Cgp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcUHJvZHVjdDsKdXNlIEFwcFxNb2RlbHNcUG1zTW9kZWxzXEJyYW5kOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcQ2F0ZWdvcnk7CnVzZSBBcHBcTW9kZWxzXFBtc01vZGVsc1xTdXBwbGllcnM7CnVzZSBNYWF0d2Vic2l0ZVxFeGNlbFxDb25jZXJuc1xUb01vZGVsOwp1c2UgTWFhdHdlYnNpdGVcRXhjZWxcQ29uY2VybnNcV2l0aFN0YXJ0Um93Owp1c2UgTWFhdHdlYnNpdGVcRXhjZWxcQ29uY2VybnNcV2l0aFZhbGlkYXRpb247CnVzZSBNYWF0d2Vic2l0ZVxFeGNlbFxDb25jZXJuc1xXaXRoSGVhZGluZ1JvdzsKdXNlIE1hYXR3ZWJzaXRlXEV4Y2VsXENvbmNlcm5zXEltcG9ydGFibGU7CnVzZSBJbGx1bWluYXRlXFN1cHBvcnRcQ29sbGVjdGlvbjsKdXNlIE1hYXR3ZWJzaXRlXEV4Y2VsXENvbmNlcm5zXFRvQ29sbGVjdGlvbjsKCmNsYXNzIFByb2R1Y3RJbXBvcnQgaW1wbGVtZW50cyBUb0NvbGxlY3Rpb24sIFdpdGhTdGFydFJvdywgV2l0aEhlYWRpbmdSb3csV2l0aFZhbGlkYXRpb24KeyAgIAogICAgdXNlIEltcG9ydGFibGU7CiAgICAvKioKICAgICogQHBhcmFtIGFycmF5ICRyb3cKICAgICoKICAgICogQHJldHVybiBcSWxsdW1pbmF0ZVxEYXRhYmFzZVxFbG9xdWVudFxNb2RlbHxudWxsCiAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGNvbGxlY3Rpb24oQ29sbGVjdGlvbiAkcm93cykKICAgIHsgICAgICAKICAgICAgIAogICAgICAgIGZvcmVhY2ggKCRyb3dzIGFzICR2YWx1ZXMpIAogICAgICAgIHsKICAgICAgICAgICAgJGNhdGVnb3J5X2lkPUNhdGVnb3J5Ojp3aGVyZSgnY29kZScsJHZhbHVlc1snY2F0ZWdvcnlfY29kZSddKS0+Zmlyc3QoWydpZCddKTsKICAgICAgICAgICAgJGJyYW5kX2lkPUJyYW5kOjp3aGVyZSgnY29kZScsJHZhbHVlc1snYnJhbmRfY29kZSddKS0+Zmlyc3QoWydpZCddKTsKICAgICAgICAgICAgJHByb2R1Y3RfdW5pdF9pZD1cQXBwXE1vZGVsc1xQbXNNb2RlbHNcUHJvZHVjdFVuaXQ6OndoZXJlKCd1bml0X25hbWUnLCR2YWx1ZXNbJ3Byb2R1Y3RfdW5pdCddKS0+Zmlyc3QoWydpZCddKTsKICAgICAgICAgICAgJHN1cHBsaWVycz1leHBsb2RlKCcsJywgJHZhbHVlc1snc3VwcGxpZXJfbW9iaWxlJ10pOwoKICAgICAgICAgICAgJHN1cHBsaWVyX2FycmF5PVtdOwogICAgICAgICAgICBmb3JlYWNoKCRzdXBwbGllcnMgYXMgJHBob25lKXsKICAgICAgICAgICAgICAgICRzdXBwbGllcj1TdXBwbGllcnM6OndoZXJlKCdtb2JpbGVfbm8nLCRwaG9uZSktPmZpcnN0KFsnaWQnXSk7CiAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRzdXBwbGllcikpIHsKICAgICAgICAgICAgICAgICAgIGFycmF5X3B1c2goJHN1cHBsaWVyX2FycmF5LCRzdXBwbGllci0+aWQpOyAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYoaXNzZXQoJGNhdGVnb3J5X2lkKSl7CiAgICAgICAgICAgICAgICAkcHJlZml4PSdQLScuZGF0ZSgneScsIHN0cnRvdGltZShkYXRlKCdZLW0tZCcpKSkuJy1TU0xaLSc7CiAgICAgICAgICAgICAgICAkc2t1PXVuaXF1ZUNvZGUoMTQsJHByZWZpeCwncHJvZHVjdHMnLCdpZCcpOwogICAgICAgICAgICAgICAgJHByb2R1Y3QgPSBQcm9kdWN0OjpjcmVhdGUoWwogICAgICAgICAgICAgICAgICAgICdza3UnID0+ICRza3UsCiAgICAgICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJz0+JGNhdGVnb3J5X2lkLT5pZCwKICAgICAgICAgICAgICAgICAgICAvLyAnYnJhbmRfaWQnPT4kYnJhbmRfaWQtPmlkLAogICAgICAgICAgICAgICAgICAgICduYW1lJz0+JHZhbHVlc1snbmFtZSddLAogICAgICAgICAgICAgICAgICAgICd0YXgnPT4kdmFsdWVzWyd0YXgnXSwKICAgICAgICAgICAgICAgICAgICAndW5pdF9wcmljZSc9PiR2YWx1ZXNbJ3VuaXRfcHJpY2UnXSwKICAgICAgICAgICAgICAgICAgICAncHJvZHVjdF91bml0X2lkJyA9PiBpc3NldCgkcHJvZHVjdF91bml0X2lkLT5pZCkgPyAkcHJvZHVjdF91bml0X2lkLT5pZCA6IDAsCiAgICAgICAgICAgICAgICAgICAgJ2NyZWF0ZWRfYXQnPT5kYXRlKCdZLW0tZCBoOmknKSwKICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICAgICAgJHByb2R1Y3QtPnN1cHBsaWVycygpLT5zeW5jKCRzdXBwbGllcl9hcnJheSk7CgogICAgICAgICAgICAgICAgJGF0dHJpYnV0ZXMgPSBcQXBwXE1vZGVsc1xQbXNNb2RlbHNcQXR0cmlidXRlOjphbGwoKTsKICAgICAgICAgICAgICAgIGlmKGlzc2V0KCRhdHRyaWJ1dGVzWzBdKSl7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCgkYXR0cmlidXRlcyBhcyAka2V5ID0+ICRhdHRyaWJ1dGUpewogICAgICAgICAgICAgICAgICAgICAgICBpZihpc3NldCgkdmFsdWVzW3N0cnRvbG93ZXIoJGF0dHJpYnV0ZS0+bmFtZSldKSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb3B0aW9uID0gXEFwcFxNb2RlbHNcUG1zTW9kZWxzXEF0dHJpYnV0ZU9wdGlvbjo6d2hlcmUoJ2F0dHJpYnV0ZV9pZCcsICRhdHRyaWJ1dGUtPmlkKS0+d2hlcmUoJ25hbWUnLCAnTElLRScsICclJy4kdmFsdWVzW3N0cnRvbG93ZXIoJGF0dHJpYnV0ZS0+bmFtZSldLiclJyktPmZpcnN0KCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZighaXNzZXQoJG9wdGlvbi0+aWQpKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkb3B0aW9uID0gXEFwcFxNb2RlbHNcUG1zTW9kZWxzXEF0dHJpYnV0ZU9wdGlvbjo6Y3JlYXRlKFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2F0dHJpYnV0ZV9pZCcgPT4gJGF0dHJpYnV0ZS0+aWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJyA9PiAkdmFsdWVzW3N0cnRvbG93ZXIoJGF0dHJpYnV0ZS0+bmFtZSldLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGVzY3JpcHRpb24nID0+ICR2YWx1ZXNbc3RydG9sb3dlcigkYXR0cmlidXRlLT5uYW1lKV0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgXEFwcFxNb2RlbHNcUG1zTW9kZWxzXFByb2R1Y3RBdHRyaWJ1dGU6OmNyZWF0ZShbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Byb2R1Y3RfaWQnID0+ICRwcm9kdWN0LT5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYXR0cmlidXRlX29wdGlvbl9pZCcgPT4gJG9wdGlvbi0+aWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gc3RhcnRSb3coKTogaW50CiAgICB7CiAgICAgICAgcmV0dXJuIDI7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHJ1bGVzKCk6IGFycmF5CiAgICB7CiAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgJ2NhdGVnb3J5X2NvZGUnID0+IFsncmVxdWlyZWQnLCAnc3RyaW5nJywnbWF4OjI1NSddLAogICAgICAgICAgICAvLyAnYnJhbmRfY29kZScgPT4gWydyZXF1aXJlZCcsJ21heDoyNTUnXSwKICAgICAgICAgICAgJ25hbWUnID0+IFsncmVxdWlyZWQnLCAnc3RyaW5nJywgJ21heDoyNTUnXSwKICAgICAgICAgICAgJ3RheCcgPT4gWydyZXF1aXJlZCcsICdudW1lcmljJ10sCiAgICAgICAgICAgICd1bml0X3ByaWNlJyA9PiBbJ3JlcXVpcmVkJywgJ251bWVyaWMnXSwKICAgICAgICAgICAgJ3N1cHBsaWVyX21vYmlsZScgPT4gWydyZXF1aXJlZCcsJ3N0cmluZyddLAogICAgICAgIF07CiAgICB9Cn0K