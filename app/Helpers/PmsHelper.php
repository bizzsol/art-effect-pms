<?php
bolt_decrypt( __FILE__ , 'pVg4dC'); return 0;
##!!!##