<?php
bolt_decrypt( __FILE__ , 'waHASS'); return 0;
##!!!##