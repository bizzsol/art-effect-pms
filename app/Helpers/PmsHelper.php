<?php
bolt_decrypt( __FILE__ , 'cb2PlU'); return 0;
##!!!##