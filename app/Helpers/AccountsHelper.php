<?php
bolt_decrypt( __FILE__ , 'jHiCPY'); return 0;
##!!!##