<?php
bolt_decrypt( __FILE__ , '9i4ShW'); return 0;
##!!!##