<?php
bolt_decrypt( __FILE__ , '1UWqxv'); return 0;
##!!!##