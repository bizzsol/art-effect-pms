<?php
bolt_decrypt( __FILE__ , 'KHhEw4'); return 0;
##!!!##