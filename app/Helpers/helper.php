<?php
bolt_decrypt( __FILE__ , 'ekMKqc'); return 0;
##!!!##