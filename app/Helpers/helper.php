<?php
bolt_decrypt( __FILE__ , 'SPjWPS'); return 0;
##!!!##