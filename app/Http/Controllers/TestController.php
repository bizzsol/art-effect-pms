<?php
bolt_decrypt( __FILE__ , '2mCXWv'); return 0;
##!!!##