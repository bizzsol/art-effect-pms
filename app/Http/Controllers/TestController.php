<?php
bolt_decrypt( __FILE__ , 'RPc65x'); return 0;
##!!!##