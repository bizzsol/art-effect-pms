<?php
bolt_decrypt( __FILE__ , 'SmhXG0'); return 0;
##!!!##