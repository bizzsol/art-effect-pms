<?php
bolt_decrypt( __FILE__ , 'XDNsHT'); return 0;
##!!!##