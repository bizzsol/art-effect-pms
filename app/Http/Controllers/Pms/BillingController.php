<?php
bolt_decrypt( __FILE__ , '5bYrKZ'); return 0;
##!!!##