<?php
bolt_decrypt( __FILE__ , '0n0Ate'); return 0;
##!!!##