<?php
bolt_decrypt( __FILE__ , 'o0gCm2'); return 0;
##!!!##