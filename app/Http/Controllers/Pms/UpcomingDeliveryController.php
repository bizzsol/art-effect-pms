<?php
bolt_decrypt( __FILE__ , 'S7VrBT'); return 0;
##!!!##