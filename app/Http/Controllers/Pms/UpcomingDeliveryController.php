<?php
bolt_decrypt( __FILE__ , 'Fo3vPY'); return 0;
##!!!##