<?php
bolt_decrypt( __FILE__ , 'qV99Dz'); return 0;
##!!!##