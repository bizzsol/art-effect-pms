<?php
bolt_decrypt( __FILE__ , 'mr2s0S'); return 0;
##!!!##