<?php
bolt_decrypt( __FILE__ , 'DDPcbj'); return 0;
##!!!##