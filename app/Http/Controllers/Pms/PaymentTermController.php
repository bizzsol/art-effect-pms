<?php
bolt_decrypt( __FILE__ , 'DJggU7'); return 0;
##!!!##