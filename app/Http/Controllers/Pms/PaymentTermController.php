<?php
bolt_decrypt( __FILE__ , '2yTi0o'); return 0;
##!!!##