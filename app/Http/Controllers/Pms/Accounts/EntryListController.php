<?php
bolt_decrypt( __FILE__ , 'hJUDt9'); return 0;
##!!!##