<?php
bolt_decrypt( __FILE__ , 'GquT16'); return 0;
##!!!##