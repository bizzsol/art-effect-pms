<?php
bolt_decrypt( __FILE__ , 'XZStpS'); return 0;
##!!!##