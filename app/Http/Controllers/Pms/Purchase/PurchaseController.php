<?php
bolt_decrypt( __FILE__ , 'aMv9ZP'); return 0;
##!!!##