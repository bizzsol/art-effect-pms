<?php
bolt_decrypt( __FILE__ , 'lRQxkJ'); return 0;
##!!!##