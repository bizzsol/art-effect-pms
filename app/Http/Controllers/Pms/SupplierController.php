<?php
bolt_decrypt( __FILE__ , 'vC9UPQ'); return 0;
##!!!##