<?php
bolt_decrypt( __FILE__ , 'iJn6jG'); return 0;
##!!!##