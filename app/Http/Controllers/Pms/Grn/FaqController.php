<?php
bolt_decrypt( __FILE__ , 'D6tgn5'); return 0;
##!!!##