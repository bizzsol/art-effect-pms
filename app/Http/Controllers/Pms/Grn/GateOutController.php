<?php
bolt_decrypt( __FILE__ , '72dvOn'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUG1zXEdybjsKCnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xDb250cm9sbGVyOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcSW52ZW50b3J5TW9kZWxzXEludmVudG9yeUFjdGlvbkNvbnRyb2w7CnVzZSBBcHBcTW9kZWxzXFBtc01vZGVsc1xQcm9kdWN0Owp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcV2FyZWhvdXNlczsKdXNlIElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0Owp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcUHVyY2hhc2VcUHVyY2hhc2VPcmRlcjsKdXNlIEFwcFxNb2RlbHNcUG1zTW9kZWxzXFB1cmNoYXNlXFB1cmNoYXNlT3JkZXJJdGVtOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcR3JuXEdvb2RzUmVjZWl2ZWROb3RlOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcR3JuXEdvb2RzUmVjZWl2ZWRJdGVtOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcR3JuXEdvb2RzUmVjZWl2ZWRJdGVtU3RvY2tJbjsKdXNlIEFwcFxNb2RlbHNcUG1zTW9kZWxzXFB1cmNoYXNlUmV0dXJuOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcUHVyY2hhc2VSZXR1cm5HYXRlT3V0Owp1c2UgSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcREI7CnVzZSBJbGx1bWluYXRlXFN1cHBvcnRcRmFjYWRlc1xNYWlsOwp1c2UgSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcQXV0aDsKCmNsYXNzIEdhdGVPdXRDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlcgp7CiAgICBwdWJsaWMgZnVuY3Rpb24gc2hvdygkcG9faWQpCiAgICB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgJHB1cmNoYXNlT3JkZXIgPSBQdXJjaGFzZU9yZGVyOjpmaW5kT3JGYWlsKCRwb19pZCk7CiAgICAgICAgICAgICRwcm9kdWN0cyA9IFB1cmNoYXNlUmV0dXJuOjp3aGVyZUhhcygncmVsR29vZHNSZWNlaXZlZEl0ZW1zLnJlbEdvb2RzUmVjZWl2ZWROb3RlJywgZnVuY3Rpb24gKCRxdWVyeSkgdXNlICgkcHVyY2hhc2VPcmRlcikgewogICAgICAgICAgICAgICAgcmV0dXJuICRxdWVyeS0+d2hlcmUoJ3B1cmNoYXNlX29yZGVyX2lkJywgJHB1cmNoYXNlT3JkZXItPmlkKTsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC0+d2hlcmVJbignc3RhdHVzJywgWydyZXR1cm4nLCAncmV0dXJuLWNoYW5nZSddKQogICAgICAgICAgICAgICAgLT53aGVyZSgnY29kZScsIHJlcXVlc3QoKS0+Z2V0KCdjb2RlJykpCiAgICAgICAgICAgICAgICAtPmdldCgpOwogICAgICAgICAgICAkYXZhaWxhYmxlID0gMDsKICAgICAgICAgICAgaWYgKGlzc2V0KCRwcm9kdWN0c1swXSkpIHsKICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRwcm9kdWN0cyBhcyAka2V5ID0+ICRwcm9kdWN0KSB7CiAgICAgICAgICAgICAgICAgICAgJGF2YWlsYWJsZSArPSAoJHByb2R1Y3QtPnJldHVybl9xdHkgLSAkcHJvZHVjdC0+Z2F0ZU91dHMtPnN1bSgncXR5JykpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJGF2YWlsYWJsZSA9PSAwKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJHRoaXMtPnVybFJlZGlyZWN0QmFjaygiTm8gSXRlbSBhdmFpbGFibGUgdG8gZ2F0ZSBvdXQhIiwgJ3Btcy9ncm4vcG8tbGlzdCcsICdlcnJvcicpOwogICAgICAgICAgICB9CgoKICAgICAgICAgICAgJHByZWZpeCA9ICdHTy0nIC4gZGF0ZSgneScsIHN0cnRvdGltZShkYXRlKCdZLW0tZCcpKSkgLiAnLScgLiAoJHB1cmNoYXNlT3JkZXItPlVuaXQtPmhyX3VuaXRfc2hvcnRfbmFtZSkgLiAnLSc7CiAgICAgICAgICAgICRiYXRjaCA9IHVuaXF1ZUNvZGUoMTgsICRwcmVmaXgsICdwdXJjaGFzZV9yZXR1cm5fZ2F0ZV9vdXRzJywgJ2lkJyk7CgogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICd0aXRsZScgPT4gJ0dhdGUgT3V0JywKICAgICAgICAgICAgICAgICdwdXJjaGFzZU9yZGVyJyA9PiAkcHVyY2hhc2VPcmRlciwKICAgICAgICAgICAgICAgICdwcm9kdWN0cycgPT4gJHByb2R1Y3RzLAogICAgICAgICAgICAgICAgJ2JhdGNoJyA9PiAkYmF0Y2gKICAgICAgICAgICAgXTsKCiAgICAgICAgICAgIHJldHVybiB2aWV3KCdwbXMuYmFja2VuZC5wYWdlcy5ncm4uZ2F0ZS1vdXQnLCAkZGF0YSk7CgogICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPmJhY2tXaXRoRXJyb3IoJGUtPmdldE1lc3NhZ2UoKSk7CiAgICAgICAgfQogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiB1cGRhdGUoUmVxdWVzdCAkcmVxdWVzdCwgJHBvX2lkKQogICAgewogICAgICAgICRyZXF1ZXN0LT52YWxpZGF0ZShbCiAgICAgICAgICAgICdnZXRfb3V0X2ZpbGUnID0+ICdudWxsYWJsZXxtYXg6M01CJywKICAgICAgICBdKTsKCiAgICAgICAgJHB1cmNoYXNlT3JkZXIgPSBQdXJjaGFzZU9yZGVyOjpmaW5kT3JGYWlsKCRwb19pZCk7CiAgICAgICAgJHByb2R1Y3RzID0gUHVyY2hhc2VSZXR1cm46OndoZXJlSGFzKCdyZWxHb29kc1JlY2VpdmVkSXRlbXMucmVsR29vZHNSZWNlaXZlZE5vdGUnLCBmdW5jdGlvbiAoJHF1ZXJ5KSB1c2UgKCRwdXJjaGFzZU9yZGVyKSB7CiAgICAgICAgICAgIHJldHVybiAkcXVlcnktPndoZXJlKCdwdXJjaGFzZV9vcmRlcl9pZCcsICRwdXJjaGFzZU9yZGVyLT5pZCk7CiAgICAgICAgfSkKICAgICAgICAgICAgLT53aGVyZUluKCdzdGF0dXMnLCBbJ3JldHVybicsICdyZXR1cm4tY2hhbmdlJ10pCiAgICAgICAgICAgIC0+Z2V0KCk7CiAgICAgICAgREI6OmJlZ2luVHJhbnNhY3Rpb24oKTsKICAgICAgICB0cnkgewoKICAgICAgICAgICAgJGdldE91dEZpbGVQYXRoID0gbnVsbDsKICAgICAgICAgICAgaWYgKCRyZXF1ZXN0LT5oYXNGaWxlKCdnZXRfb3V0X2ZpbGUnKSkgewogICAgICAgICAgICAgICAgJGdldE91dEZpbGVQYXRoID0gJHRoaXMtPmZpbGVVcGxvYWQoJHJlcXVlc3QtPmZpbGUoJ2dldF9vdXRfZmlsZScpLCAndXBsb2FkL2dldG91dC1maWxlJyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICRjb3VudCA9IDA7CiAgICAgICAgICAgIGlmIChpc3NldCgkcHJvZHVjdHNbMF0pKSB7CiAgICAgICAgICAgICAgICBmb3JlYWNoICgkcHJvZHVjdHMgYXMgJGtleSA9PiAkcHJvZHVjdCkgewogICAgICAgICAgICAgICAgICAgIGlmIChhcnJheV9rZXlfZXhpc3RzKCRwcm9kdWN0LT5pZCwgaXNzZXQoJHJlcXVlc3QtPmdhdGVfb3V0X3F0eSkgJiYgaXNfYXJyYXkoJHJlcXVlc3QtPmdhdGVfb3V0X3F0eSkgPyAkcmVxdWVzdC0+Z2F0ZV9vdXRfcXR5IDogW10pKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRhdmFpbGFibGUgPSAoJHByb2R1Y3QtPnJldHVybl9xdHkgLSAoaXNzZXQoJHByb2R1Y3QtPmdldE91dHNbMF0pID8gJHByb2R1Y3QtPmdldE91dHMtPnN1bSgncXR5JykgOiAwKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkYXZhaWxhYmxlID4gMCkgewoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB1cmNoYXNlUmV0dXJuR2F0ZU91dDo6Y3JlYXRlKFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncHVyY2hhc2VfcmV0dXJuX2lkJyA9PiAkcHJvZHVjdC0+aWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2JhdGNoJyA9PiAkcmVxdWVzdC0+YmF0Y2gsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhdGUnID0+IGRhdGUoJ1ktbS1kJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3F0eScgPT4gJHJlcXVlc3QtPmdhdGVfb3V0X3F0eVskcHJvZHVjdC0+aWRdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdnZXRfb3V0X2ZpbGUnID0+ICRrZXkgPT0gMCA/ICRnZXRPdXRGaWxlUGF0aCA6IG51bGwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb3VudCsrOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoJGNvdW50ID4gMCkgewogICAgICAgICAgICAgICAgREI6OmNvbW1pdCgpOwogICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLT51cmxSZWRpcmVjdEJhY2soJ0dhdGUgb3V0IHByb2Nlc3MgaGFzZSBiZWVuIGRvbmUgc3VjY2Vzc2Z1bGx5LicsICdwbXMvZ3JuL3BvLWxpc3QnLCAnc3VjY2VzcycpOwogICAgICAgICAgICB9CgogICAgICAgIH0gY2F0Y2ggKFxFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgREI6OnJvbGxhYmNrKCk7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+YmFja1dpdGhFcnJvcigkZS0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiAkdGhpcy0+YmFja1dpdGhTdWNjZXNzKCdTb21ldGhpbmcgV2VudCBXcm9uZyEnKTsKICAgIH0KfQo=