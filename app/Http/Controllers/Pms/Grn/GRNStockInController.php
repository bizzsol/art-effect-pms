<?php
bolt_decrypt( __FILE__ , 'pjGJGF'); return 0;
##!!!##