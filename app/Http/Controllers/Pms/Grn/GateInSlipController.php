<?php
bolt_decrypt( __FILE__ , '6DsKce'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUG1zXEdybjsKCnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xDb250cm9sbGVyOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcSW52ZW50b3J5TW9kZWxzXEludmVudG9yeUFjdGlvbkNvbnRyb2w7CnVzZSBBcHBcTW9kZWxzXFBtc01vZGVsc1xQcm9kdWN0Owp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcV2FyZWhvdXNlczsKdXNlIEV4Y2VwdGlvbjsKdXNlIElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0Owp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcUHVyY2hhc2VcUHVyY2hhc2VPcmRlcjsKdXNlIEFwcFxNb2RlbHNcUG1zTW9kZWxzXFB1cmNoYXNlXFB1cmNoYXNlT3JkZXJJdGVtOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcR3JuXEdvb2RzUmVjZWl2ZWROb3RlOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcR3JuXEdvb2RzUmVjZWl2ZWRJdGVtOwp1c2UgQXBwXE1vZGVsc1xQbXNNb2RlbHNcR3JuXEdvb2RzUmVjZWl2ZWRJdGVtU3RvY2tJbjsKdXNlIElsbHVtaW5hdGVcU3VwcG9ydFxGYWNhZGVzXE1haWw7CnVzZSBEQiwgQXV0aDsKCmNsYXNzIEdhdGVJblNsaXBDb250cm9sbGVyIGV4dGVuZHMgQ29udHJvbGxlcgp7CiAgICBwdWJsaWMgZnVuY3Rpb24gc2hvdygkcG9faWQpCiAgICB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgJGdybl9pZCA9IHJlcXVlc3QoKS0+aGFzKCdncm4nKSAmJiByZXF1ZXN0KCktPmdldCgnZ3JuJykgPiAwID8gcmVxdWVzdCgpLT5nZXQoJ2dybicpIDogMDsKCiAgICAgICAgICAgICRwdXJjaGFzZU9yZGVyID0gUHVyY2hhc2VPcmRlcjo6aGFzKCdyZWxHb29kUmVjZWl2ZU5vdGUnKQogICAgICAgICAgICAgICAgLT53aGVyZShbCiAgICAgICAgICAgICAgICAgICAgJ2lzX3NlbmQnID0+ICd5ZXMnLAogICAgICAgICAgICAgICAgICAgICdpZCcgPT4gJHBvX2lkCiAgICAgICAgICAgICAgICBdKS0+Zmlyc3QoKTsKCiAgICAgICAgICAgICRnb29kUmVjZWl2ZU5vdGVzID0gR29vZHNSZWNlaXZlZE5vdGU6OndpdGgoWwogICAgICAgICAgICAgICAgJ3JlbFB1cmNoYXNlT3JkZXInLAogICAgICAgICAgICAgICAgJ3JlbFB1cmNoYXNlT3JkZXIucmVsUXVvdGF0aW9uJywKICAgICAgICAgICAgICAgICdyZWxHb29kc1JlY2VpdmVkSXRlbXMnLAogICAgICAgICAgICAgICAgJ3JlbEdvb2RzUmVjZWl2ZWRJdGVtcy5yZWxQcm9kdWN0LmF0dHJpYnV0ZXMuYXR0cmlidXRlT3B0aW9uLmF0dHJpYnV0ZScsCiAgICAgICAgICAgICAgICAncmVsR29vZHNSZWNlaXZlZEl0ZW1zLmF0dHJpYnV0ZXMuYXR0cmlidXRlT3B0aW9uLmF0dHJpYnV0ZScsCiAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAtPndoZXJlSW4oJ2lkJywgKCRncm5faWQgPiAwID8gWyRncm5faWRdIDogJHB1cmNoYXNlT3JkZXItPnJlbEdvb2RSZWNlaXZlTm90ZS0+cGx1Y2soJ2lkJyktPnRvQXJyYXkoKSkpLT5nZXQoKTsKCiAgICAgICAgICAgIHJldHVybiB2aWV3TVBERigncG1zLmJhY2tlbmQucGFnZXMuZ3JuLnNsaXAtcGRmJywgWwogICAgICAgICAgICAgICAgJ3RpdGxlJyA9PiAnR2F0ZSBpbiBTbGlwJywKICAgICAgICAgICAgICAgICdwdXJjaGFzZU9yZGVyJyA9PiAkcHVyY2hhc2VPcmRlciwKICAgICAgICAgICAgICAgICdnb29kUmVjZWl2ZU5vdGVzJyA9PiAkZ29vZFJlY2VpdmVOb3RlcywKCiAgICAgICAgICAgIF0sICdHYXRlIGluIFNsaXAnLCAnR2F0ZSBpbiBTbGlwJywgJ2E2Jyk7CgogICAgICAgICAgICByZXR1cm4gdmlldygncG1zLmJhY2tlbmQucGFnZXMuZ3JuLnNsaXAnLCBjb21wYWN0KCdwdXJjaGFzZU9yZGVyJywgJ2dvb2RSZWNlaXZlTm90ZXMnKSk7CgogICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICBEQjo6cm9sbGJhY2soKTsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5iYWNrV2l0aEVycm9yKCRlLT5nZXRNZXNzYWdlKCkpOwogICAgICAgIH0KICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gc2VuZEdhdGVJblNsaXAoJHBvSWQsICRncm5JZCkKICAgIHsKICAgICAgICB0cnkgewoKICAgICAgICAgICAgJHB1cmNoYXNlT3JkZXIgPSBQdXJjaGFzZU9yZGVyOjpoYXMoJ3JlbEdvb2RSZWNlaXZlTm90ZScpCiAgICAgICAgICAgICAgICAtPndoZXJlKFsKICAgICAgICAgICAgICAgICAgICAnaXNfc2VuZCcgPT4gJ3llcycsCiAgICAgICAgICAgICAgICAgICAgJ2lkJyA9PiAkcG9JZAogICAgICAgICAgICAgICAgXSktPmZpcnN0KCk7CgogICAgICAgICAgICAkZ29vZFJlY2VpdmVOb3RlcyA9IEdvb2RzUmVjZWl2ZWROb3RlOjp3aXRoKCdyZWxQdXJjaGFzZU9yZGVyJywgJ3JlbFB1cmNoYXNlT3JkZXIucmVsUXVvdGF0aW9uJywgJ3JlbEdvb2RzUmVjZWl2ZWRJdGVtcycsICdyZWxHb29kc1JlY2VpdmVkSXRlbXMucmVsUHJvZHVjdCcpCiAgICAgICAgICAgICAgICAtPndoZXJlSW4oJ2lkJywgKCRncm5JZCA+IDAgPyBbJGdybklkXSA6ICRwdXJjaGFzZU9yZGVyLT5yZWxHb29kUmVjZWl2ZU5vdGUtPnBsdWNrKCdpZCcpLT50b0FycmF5KCkpKS0+Z2V0KCk7CgoKICAgICAgICAgICAgJHN1cHBsaWVyID0gJHB1cmNoYXNlT3JkZXItPnJlbFF1b3RhdGlvbi0+cmVsU3VwcGxpZXJzOwogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICd0aXRsZScgPT4gJ0dhdGUgaW4gU2xpcCcsCiAgICAgICAgICAgICAgICAncHVyY2hhc2VPcmRlcicgPT4gJHB1cmNoYXNlT3JkZXIsCiAgICAgICAgICAgICAgICAnZ29vZFJlY2VpdmVOb3RlcycgPT4gJGdvb2RSZWNlaXZlTm90ZXMsCiAgICAgICAgICAgICAgICAnc3VwcGxpZXInID0+ICRzdXBwbGllciwKICAgICAgICAgICAgICAgICdwZGZGaWxlTmFtZScgPT4gIkdhdGUgSW4gU2xpcCIsCiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkcGRmID0gb3V0cHV0TVBERigncG1zLmJhY2tlbmQucGFnZXMuZ3JuLnNsaXAtcGRmJywgJGRhdGEsICRkYXRhWyd0aXRsZSddLCAkZGF0YVsncGRmRmlsZU5hbWUnXSwgJ2E2Jyk7CgogICAgICAgICAgICBcTWFpbDo6c2VuZCgncG1zLmJhY2tlbmQubWFpbC5zbGlwLW1haWwtYm9keScsICRkYXRhLCBmdW5jdGlvbiAoJG1zZykgdXNlICgkc3VwcGxpZXIsICRwZGYsICRkYXRhKSB7CiAgICAgICAgICAgICAgICAkbXNnCiAgICAgICAgICAgICAgICAgICAgLT50bygkc3VwcGxpZXItPmVtYWlsLCAkc3VwcGxpZXItPm5hbWUpCiAgICAgICAgICAgICAgICAgICAgLT5zdWJqZWN0KCJHYXRlIEluIFNsaXAiKQogICAgICAgICAgICAgICAgICAgIC0+YXR0YWNoRGF0YSgkcGRmLCAkZGF0YVsicGRmRmlsZU5hbWUiXSAuICIucGRmIik7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCktPmpzb24oWwogICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnID0+IHRydWUsCiAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gJ01haWwgaGFzIGJlZW4gc2VuZCBzdWNjZXNzZnVsbHkhJwogICAgICAgICAgICBdKTsKCiAgICAgICAgfSBjYXRjaCAoXEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UoKS0+anNvbihbCiAgICAgICAgICAgICAgICAnc3VjY2VzcycgPT4gZmFsc2UsCiAgICAgICAgICAgICAgICAnbWVzc2FnZScgPT4gJGUtPmdldE1lc3NhZ2UoKQogICAgICAgICAgICBdKTsKICAgICAgICB9CiAgICB9Cn0K