<?php
bolt_decrypt( __FILE__ , 'WvbGqU'); return 0;
##!!!##