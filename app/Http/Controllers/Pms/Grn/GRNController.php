<?php
bolt_decrypt( __FILE__ , 'elVJAU'); return 0;
##!!!##