<?php
bolt_decrypt( __FILE__ , 'oGNh6e'); return 0;
##!!!##