<?php
bolt_decrypt( __FILE__ , 'wDKc7g'); return 0;
##!!!##