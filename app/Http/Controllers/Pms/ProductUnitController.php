<?php
bolt_decrypt( __FILE__ , 'agN9RX'); return 0;
##!!!##