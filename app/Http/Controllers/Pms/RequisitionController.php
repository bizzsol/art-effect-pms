<?php
bolt_decrypt( __FILE__ , 'scSdXW'); return 0;
##!!!##