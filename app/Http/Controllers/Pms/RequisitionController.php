<?php
bolt_decrypt( __FILE__ , 'YVKFSe'); return 0;
##!!!##