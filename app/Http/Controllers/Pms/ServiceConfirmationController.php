<?php
bolt_decrypt( __FILE__ , '7fUfmC'); return 0;
##!!!##