<?php
bolt_decrypt( __FILE__ , 'jBHK6u'); return 0;
##!!!##