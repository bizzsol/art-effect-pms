<?php
bolt_decrypt( __FILE__ , 'VhBaCT'); return 0;
##!!!##