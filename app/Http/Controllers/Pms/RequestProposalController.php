<?php
bolt_decrypt( __FILE__ , 's5uCHB'); return 0;
##!!!##