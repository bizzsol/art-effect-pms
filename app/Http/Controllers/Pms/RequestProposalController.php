<?php
bolt_decrypt( __FILE__ , 'dNXWBd'); return 0;
##!!!##