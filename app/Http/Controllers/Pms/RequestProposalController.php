<?php
bolt_decrypt( __FILE__ , '2WsDFd'); return 0;
##!!!##