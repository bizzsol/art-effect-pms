<?php
bolt_decrypt( __FILE__ , 'io6BRY'); return 0;
##!!!##