<?php
bolt_decrypt( __FILE__ , 'CpEw4d'); return 0;
##!!!##