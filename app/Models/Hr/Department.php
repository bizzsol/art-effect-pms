<?php
bolt_decrypt( __FILE__ , 'FZ3Uoi'); return 0;
##!!!##CgpuYW1lc3BhY2UgQXBwXE1vZGVsc1xIcjsKCnVzZSBBcHBcTW9kZWxzXEVtcGxveWVlOwp1c2UgQXBwXE1vZGVsc1xIclxEZXBhcnRtZW50Owp1c2UgQXBwXE1vZGVsc1xIclxGbG9vcjsKdXNlIEFwcFxNb2RlbHNcTXlQcm9qZWN0XERlbGl2ZXJhYmxlczsKdXNlIEFwcFxNb2RlbHNcTXlQcm9qZWN0XFByb2plY3Q7CnVzZSBBcHBcTW9kZWxzXE15UHJvamVjdFxQcm9qZWN0VGFzazsKdXNlIEFwcFxNb2RlbHNcTXlQcm9qZWN0XFN1YkRlbGl2ZXJhYmxlczsKdXNlIElsbHVtaW5hdGVcRGF0YWJhc2VcRWxvcXVlbnRcTW9kZWw7CnVzZSBJbGx1bWluYXRlXERhdGFiYXNlXEVsb3F1ZW50XFNvZnREZWxldGVzOwp1c2UgU3BhdGllXEFjdGl2aXR5bG9nXFRyYWl0c1xMb2dzQWN0aXZpdHk7CnVzZSBTcGF0aWVcQWN0aXZpdHlsb2dcTG9nT3B0aW9uczsKCmNsYXNzIERlcGFydG1lbnQgZXh0ZW5kcyBNb2RlbAp7Cgl1c2UgU29mdERlbGV0ZXM7CgkgCglwcm90ZWN0ZWQgJHRhYmxlID0gJ2hyX2RlcGFydG1lbnQnOwoJcHJvdGVjdGVkICRwcmltYXJ5S2V5ID0gJ2hyX2RlcGFydG1lbnRfaWQnOwogICAgcHJvdGVjdGVkIHN0YXRpYyAkbG9nQXR0cmlidXRlcyA9IFsnaHJfZGVwYXJ0bWVudF9hcmVhX2lkJywgJ2hyX2RlcGFydG1lbnRfbmFtZScsICdocl9kZXBhcnRtZW50X25hbWVfYm4nLCAnaHJfZGVwYXJ0bWVudF9jb2RlJywgJ2hyX2RlcGFydG1lbnRfc3RhdHVzJ107CiAgICBwcm90ZWN0ZWQgc3RhdGljICRsb2dOYW1lID0gJ2RlcGFydG1lbnQnOwoKICAgIHByb3RlY3RlZCAkZmlsbGFibGUgPSBbCiAgICAgICAgJ2hyX3VuaXRfaWQnLAogICAgICAgICdocl9kZXBhcnRtZW50X25hbWUnLAogICAgICAgICdocl9kZXBhcnRtZW50X25hbWVfYm4nLAogICAgICAgICdocl9kZXBhcnRtZW50X2NvZGUnLAogICAgICAgICdocl9kZXBhcnRtZW50X21pbl9yYW5nZScsCiAgICAgICAgJ2hyX2RlcGFydG1lbnRfbWF4X3JhbmdlJywKICAgICAgICAnaHJfZGVwYXJ0bWVudF9zdGF0dXMnLAogICAgICAgICdzZXF1ZW5jZScsCiAgICAgICAgJ2NyZWF0ZWRfYnknLAogICAgICAgICd1cGRhdGVkX2J5JywKICAgICAgICAnZGVsZXRlZF9hdCcsCiAgICBdOwoKICAgIHByb3RlY3RlZCAkZGF0ZXMgPSBbCiAgICAgICAgJ2NyZWF0ZWRfYXQnLCAndXBkYXRlZF9hdCcsICdkZWxldGVkX2F0JwogICAgXTsKCiAgICBwdWJsaWMgZnVuY3Rpb24gdW5pdCgpewogICAgICAgIHJldHVybiAkdGhpcy0+aGFzT25lKFxBcHBcTW9kZWxzXEhyXFVuaXQ6OmNsYXNzLCAnaHJfdW5pdF9pZCcsICdocl91bml0X2lkJyk7IAogICAgfQoKICAgIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gZ2V0RGVwdExpc3QoKQogICAgewogICAgICAgIHJldHVybiBEZXBhcnRtZW50OjpwbHVjaygnaHJfZGVwYXJ0bWVudF9uYW1lJywgJ2hyX2RlcGFydG1lbnRfaWQnKTsKICAgIH0KCgogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXREZXBhcnRtZW50QXJlYUlkV2lzZSgkaWQpCiAgICB7CiAgICAJcmV0dXJuIERlcGFydG1lbnQ6OndoZXJlKCdocl9kZXBhcnRtZW50X2FyZWFfaWQnLCAkaWQpLT53aGVyZSgnaHJfZGVwYXJ0bWVudF9zdGF0dXMnLCAxKS0+Z2V0KCk7CiAgICB9CgogICAgCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0RGVwdFdpc2VFbXAoJHVuaXRJZCwgJGFyZWFJZCwgJGRlcGFydG1lbnRfaWQpCiAgICB7CiAgICAgICAgJHdoZXJlID0gWwogICAgICAgICAgICAnYXNfdW5pdF9pZCcgPT4gJHVuaXRJZCwKICAgICAgICAgICAgJ2FzX2FyZWFfaWQnID0+ICRhcmVhSWQsCiAgICAgICAgICAgICdhc19kZXBhcnRtZW50X2lkJyA9PiAkZGVwYXJ0bWVudF9pZCwKICAgICAgICAgICAgJ2FzX3N0YXR1cycgPT4gMQogICAgICAgIF07CiAgICAgICAgcmV0dXJuIEVtcGxveWVlOjp3aGVyZSgkd2hlcmUpLT5nZXQoKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0Rmxvb3JDb3VudCgkdW5pdElkKQogICAgewogICAgICAgIHJldHVybiBGbG9vcjo6d2hlcmUoWydocl9mbG9vcl91bml0X2lkJyA9PiAkdW5pdElkLCAnaHJfZmxvb3Jfc3RhdHVzJyA9PiAxXSktPmNvdW50KCk7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXREZXB0TGlzdEFzT2JqZWN0KCkKICAgIHsKICAgICAgICByZXR1cm4gRGVwYXJ0bWVudDo6c2VsZWN0KCdocl9kZXBhcnRtZW50X25hbWUnLCAnaHJfZGVwYXJ0bWVudF9pZCcpLT5nZXQoKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gc2VjdGlvbnMoKQogICAgewogICAgICAgIHJldHVybiAkdGhpcy0+aGFzTWFueSgnQXBwXE1vZGVsc1xIclxTZWN0aW9uJywgJ2hyX3NlY3Rpb25fZGVwYXJ0bWVudF9pZCcsICdocl9kZXBhcnRtZW50X2lkJyk7CiAgICB9CgogICAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBnZXRTZWxjdGVkRGVwYXJ0bWVudElkTmFtZSgkYXJlYV9pZCkKICAgIHsKICAgICAgICByZXR1cm4gRGVwYXJ0bWVudDo6c2VsZWN0KCdocl9kZXBhcnRtZW50X25hbWUnLCAnaHJfZGVwYXJ0bWVudF9pZCcpLT53aGVyZSgnaHJfZGVwYXJ0bWVudF9hcmVhX2lkJywkYXJlYV9pZCktPmdldCgpOwogICAgfQoKICAgIC8qKgogICAgICogR2V0IGFsbCBvZiB0aGUgRGVsaXZlcmFibGVzIHRoYXQgYXJlIGFzc2lnbmVkIHRoaXMgZGVwYXJ0bWVudC4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHRhc2tzKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPm1vcnBoZWRCeU1hbnkoUHJvamVjdFRhc2s6OmNsYXNzLCAnYWxpZ25hYmxlJyk7CiAgICB9CgogICAgLyoqCiAgICAgKiBHZXQgYWxsIG9mIHRoZSBTdWIgRGVsaXZlcmFibGVzIHRoYXQgYXJlIGFzc2lnbmVkIHRoaXMgZGVwYXJ0bWVudC4KICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIHN1YkRlbGl2ZXJhYmxlcygpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5tb3JwaGVkQnlNYW55KFN1YkRlbGl2ZXJhYmxlczo6Y2xhc3MsICdhbGlnbmFibGUnKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gcHJvamVjdHMoKQogICAgewogICAgICAgIHJldHVybiAkdGhpcy0+bW9ycGhlZEJ5TWFueShQcm9qZWN0OjpjbGFzcywgJ2FsaWduYWJsZScpOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiBwdXJjaGFzZU9yZGVycygpCiAgICB7CiAgICAgICAgcmV0dXJuICR0aGlzLT5oYXNNYW55KFxBcHBcTW9kZWxzXFBtc01vZGVsc1xQdXJjaGFzZVxQdXJjaGFzZU9yZGVyUmVxdWlzaXRpb246OmNsYXNzLCAnYXNfZGVwYXJ0bWVudF9pZCcsICdhc19kZXBhcnRtZW50X2lkJyk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHVzZXJzKCkKICAgIHsKICAgICAgICByZXR1cm4gJHRoaXMtPmhhc01hbnkoXEFwcFxVc2VyUHJpb3JpdHk6OmNsYXNzLCAnaHJfZGVwYXJ0bWVudF9pZCcsICdocl9kZXBhcnRtZW50X2lkJyk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIGdldEFjdGl2aXR5bG9nT3B0aW9ucygpOiBMb2dPcHRpb25zCiAgICB7CiAgICAgICAgcmV0dXJuIExvZ09wdGlvbnM6OmRlZmF1bHRzKCk7CiAgICB9Cn0K